---
// 模板市场页 - 静态版本，兼容 GitHub Pages
import DashboardLayout from '../../layouts/DashboardLayout.astro';

// 静态模板数据
const templates = [
  {
    id: 'base',
    name: '基础模板',
    description: '最简洁的起始模板，包含基础的布局和组件结构',
    category: '通用',
    icon: '⚡',
    features: [
      '🎨 现代化设计',
      '📱 响应式布局',
      '🔧 开箱即用',
      '🚀 性能优化'
    ],
    useCases: ['演示项目', '快速原型', '学习练习'],
    command: 'astro-zero create my-project --template base',
    demoUrl: '#',
    sourceUrl: 'https://github.com/astro-base-zero/astro-base-zero/tree/main/packages/templates/base'
  },
  {
    id: 'blog',
    name: '博客模板',
    description: '适合博客写作，支持 Markdown、标签分类和文章管理',
    category: '内容创作',
    icon: '📝',
    features: [
      '📄 Markdown 支持',
      '🏷️ 标签分类',
      '🔍 全文搜索',
      '📊 阅读统计'
    ],
    useCases: ['个人博客', '技术文档', '知识分享'],
    command: 'astro-zero create my-blog --template blog',
    demoUrl: '#',
    sourceUrl: 'https://github.com/astro-base-zero/astro-base-zero/tree/main/packages/templates/blog'
  },
  {
    id: 'tool',
    name: '工具模板',
    description: '适合展示在线工具，包含交互演示和使用说明',
    category: '工具展示',
    icon: '🔧',
    features: [
      '⚡ React 组件',
      '🎯 交互演示',
      '📖 使用说明',
      '📊 数据处理'
    ],
    useCases: ['在线工具', '计算器', '转换器'],
    command: 'astro-zero create my-tool --template tool',
    demoUrl: '#',
    sourceUrl: 'https://github.com/astro-base-zero/astro-base-zero/tree/main/packages/templates/tool'
  }
];

const categories = [...new Set(templates.map(t => t.category))];
---

<DashboardLayout title="模板市场" description="浏览和下载 Astro 项目模板">
  <!-- 页面头部 -->
  <div class="mb-8">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-secondary-900">模板市场</h1>
        <p class="mt-2 text-lg text-secondary-600">
          选择适合你的项目模板，快速开始开发
        </p>
      </div>
      
      <div class="flex items-center space-x-3">
        <button 
          onclick="showCliGuide()"
          class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md font-medium transition-colors"
        >
          CLI 使用指南
        </button>
      </div>
    </div>
  </div>

  <!-- CLI 使用指南面板 -->
  <div id="cli-guide" class="hidden mb-8 bg-blue-50 border border-blue-200 rounded-lg p-6">
    <div class="flex items-start justify-between">
      <div class="flex-1">
        <h3 class="text-lg font-semibold text-blue-900 mb-4">📋 如何使用模板</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 class="font-medium text-blue-800 mb-2">方法一：使用 CLI 工具（推荐）</h4>
            <div class="space-y-2">
              <div class="bg-blue-900 text-blue-100 p-3 rounded-md font-mono text-sm">
                <code># 安装 CLI 工具</code><br>
                <code>npm install -g @astro-base-zero/cli</code>
              </div>
              <div class="bg-blue-900 text-blue-100 p-3 rounded-md font-mono text-sm">
                <code># 使用模板创建项目</code><br>
                <code>astro-zero create my-project --template blog</code>
              </div>
            </div>
          </div>
          
          <div>
            <h4 class="font-medium text-blue-800 mb-2">方法二：直接下载模板</h4>
            <div class="space-y-2">
              <div class="bg-blue-900 text-blue-100 p-3 rounded-md font-mono text-sm">
                <code># 克隆仓库</code><br>
                <code>git clone https://github.com/astro-base-zero/astro-base-zero.git</code>
              </div>
              <div class="bg-blue-900 text-blue-100 p-3 rounded-md font-mono text-sm">
                <code># 复制模板到新目录</code><br>
                <code>cp -r packages/templates/blog my-project</code>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <button 
        onclick="hideCliGuide()"
        class="text-blue-400 hover:text-blue-600 transition-colors ml-4"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>

  <!-- 分类过滤器 -->
  <div class="mb-6">
    <div class="flex flex-wrap gap-2">
      <button 
        onclick="filterTemplates('all')"
        class="filter-btn active px-4 py-2 text-sm font-medium bg-primary-600 text-white rounded-md transition-colors"
        data-category="all"
      >
        全部模板
      </button>
      {categories.map(category => (
        <button 
          onclick={`filterTemplates('${category}')`}
          class="filter-btn px-4 py-2 text-sm font-medium bg-secondary-100 text-secondary-700 hover:bg-secondary-200 rounded-md transition-colors"
          data-category={category}
        >
          {category}
        </button>
      ))}
    </div>
  </div>

  <!-- 模板网格 -->
  <div id="templates-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {templates.map(template => (
      <div 
        class="template-card bg-white rounded-lg border border-secondary-200 hover:border-primary-300 hover:shadow-lg transition-all duration-200"
        data-category={template.category}
      >
        <!-- 模板头部 -->
        <div class="p-6">
          <div class="flex items-start justify-between mb-4">
            <div class="flex items-center space-x-3">
              <span class="text-3xl">{template.icon}</span>
              <div>
                <h3 class="text-lg font-semibold text-secondary-900">{template.name}</h3>
                <span class="text-sm text-secondary-500">{template.category}</span>
              </div>
            </div>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
              推荐
            </span>
          </div>

          <p class="text-secondary-600 mb-4 line-clamp-2">
            {template.description}
          </p>

          <!-- 特性标签 -->
          <div class="flex flex-wrap gap-2 mb-4">
            {template.features.slice(0, 3).map(feature => (
              <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-secondary-100 text-secondary-700">
                {feature}
              </span>
            ))}
          </div>

          <!-- 使用场景 -->
          <div class="mb-4">
            <h4 class="text-sm font-medium text-secondary-700 mb-2">适用场景:</h4>
            <div class="flex flex-wrap gap-1">
              {template.useCases.map(useCase => (
                <span class="inline-flex items-center px-2 py-1 rounded-md text-xs bg-green-100 text-green-700">
                  {useCase}
                </span>
              ))}
            </div>
          </div>

          <!-- CLI 命令 -->
          <div class="mb-4">
            <h4 class="text-sm font-medium text-secondary-700 mb-2">创建命令:</h4>
            <div class="bg-secondary-900 text-green-400 p-3 rounded-md font-mono text-sm relative">
              <code>{template.command}</code>
              <button 
                onclick={`copyCommand('${template.command}')`}
                class="absolute top-2 right-2 text-secondary-400 hover:text-green-400 transition-colors"
                title="复制命令"
              >
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                </svg>
              </button>
            </div>
          </div>
        </div>

        <!-- 模板操作 -->
        <div class="px-6 pb-6">
          <div class="flex space-x-3">
            <a 
              href={template.sourceUrl}
              target="_blank"
              class="flex-1 bg-primary-600 hover:bg-primary-700 text-white text-center py-2 px-4 rounded-md text-sm font-medium transition-colors"
            >
              查看源码
            </a>
            <button 
              onclick={`showTemplateDetails('${template.id}')`}
              class="flex-1 bg-secondary-100 hover:bg-secondary-200 text-secondary-700 py-2 px-4 rounded-md text-sm font-medium transition-colors"
            >
              查看详情
            </button>
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- 模板详情模态框 -->
  <div id="template-details-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center">
    <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
      <div class="flex items-center justify-between p-6 border-b border-secondary-200">
        <h2 class="text-xl font-semibold text-secondary-900" id="modal-title">模板详情</h2>
        <button 
          onclick="closeTemplateDetails()"
          class="text-secondary-400 hover:text-secondary-600 transition-colors"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <div class="p-6" id="modal-content">
        <!-- 动态内容将在这里插入 -->
      </div>
    </div>
  </div>

  <!-- 底部说明 -->
  <div class="mt-12 bg-secondary-50 rounded-lg p-6">
    <h3 class="text-lg font-semibold text-secondary-900 mb-4">💡 使用提示</h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <h4 class="font-medium text-secondary-800 mb-2">自定义模板</h4>
        <p class="text-sm text-secondary-600">
          你可以基于现有模板创建自己的自定义模板。修改模板文件后，可以在本地项目中复用。
        </p>
      </div>
      <div>
        <h4 class="font-medium text-secondary-800 mb-2">品牌定制</h4>
        <p class="text-sm text-secondary-600">
          所有模板都支持品牌信息自动注入。使用 <code class="bg-secondary-200 px-1 rounded">astro-zero config brand</code> 设置你的品牌信息。
        </p>
      </div>
    </div>
  </div>
</DashboardLayout>

<script define:vars={{ templates }} is:inline>
  // 模板市场交互脚本
  document.addEventListener('DOMContentLoaded', function() {
    // 显示/隐藏 CLI 指南
    window.showCliGuide = function() {
      document.getElementById('cli-guide')?.classList.remove('hidden');
    };

    window.hideCliGuide = function() {
      document.getElementById('cli-guide')?.classList.add('hidden');
    };

    // 过滤模板
    window.filterTemplates = function(category) {
      const cards = document.querySelectorAll('.template-card');
      const buttons = document.querySelectorAll('.filter-btn');

      // 更新按钮状态
      buttons.forEach(btn => {
        btn.classList.remove('active', 'bg-primary-600', 'text-white');
        btn.classList.add('bg-secondary-100', 'text-secondary-700');
      });

      const activeBtn = document.querySelector(`[data-category="${category}"]`);
      if (activeBtn) {
        activeBtn.classList.add('active', 'bg-primary-600', 'text-white');
        activeBtn.classList.remove('bg-secondary-100', 'text-secondary-700');
      }

      // 过滤模板卡片
      cards.forEach(card => {
        const cardCategory = card.getAttribute('data-category');
        if (category === 'all' || cardCategory === category) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    };

    // 复制命令
    window.copyCommand = async function(command) {
      try {
        await navigator.clipboard.writeText(command);
        
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50';
        notification.textContent = '命令已复制到剪贴板';
        document.body.appendChild(notification);
        
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 2000);
      } catch (err) {
        console.error('复制失败:', err);
      }
    };

    // 显示模板详情
    window.showTemplateDetails = function(templateId) {
      const template = templates.find(t => t.id === templateId);
      if (!template) return;

      const modal = document.getElementById('template-details-modal');
      const title = document.getElementById('modal-title');
      const content = document.getElementById('modal-content');

      if (title) title.textContent = template.name + ' - 详细信息';
      
      if (content) {
        content.innerHTML = `
          <div class="space-y-6">
            <div>
              <h3 class="text-lg font-medium text-secondary-900 mb-3">模板描述</h3>
              <p class="text-secondary-600">${template.description}</p>
            </div>

            <div>
              <h3 class="text-lg font-medium text-secondary-900 mb-3">完整特性列表</h3>
              <div class="grid grid-cols-2 gap-2">
                ${template.features.map(feature => 
                  `<div class="flex items-center text-sm text-secondary-700">
                    <span class="mr-2">✓</span>${feature}
                  </div>`
                ).join('')}
              </div>
            </div>

            <div>
              <h3 class="text-lg font-medium text-secondary-900 mb-3">使用场景</h3>
              <div class="flex flex-wrap gap-2">
                ${template.useCases.map(useCase => 
                  `<span class="inline-flex items-center px-3 py-1 rounded-full text-sm bg-green-100 text-green-800">
                    ${useCase}
                  </span>`
                ).join('')}
              </div>
            </div>

            <div>
              <h3 class="text-lg font-medium text-secondary-900 mb-3">创建命令</h3>
              <div class="bg-secondary-900 text-green-400 p-4 rounded-md font-mono text-sm">
                ${template.command}
              </div>
            </div>

            <div class="flex space-x-3">
              <a 
                href="${template.sourceUrl}" 
                target="_blank"
                class="flex-1 bg-primary-600 hover:bg-primary-700 text-white text-center py-3 px-4 rounded-md font-medium transition-colors"
              >
                查看 GitHub 源码
              </a>
              <button 
                onclick="copyCommand('${template.command}')"
                class="flex-1 bg-secondary-100 hover:bg-secondary-200 text-secondary-700 py-3 px-4 rounded-md font-medium transition-colors"
              >
                复制创建命令
              </button>
            </div>
          </div>
        `;
      }

      modal?.classList.remove('hidden');
      modal?.classList.add('flex');
    };

    // 关闭模板详情
    window.closeTemplateDetails = function() {
      const modal = document.getElementById('template-details-modal');
      modal?.classList.add('hidden');
      modal?.classList.remove('flex');
    };
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .filter-btn.active {
    @apply bg-primary-600 text-white;
  }
</style> 