---
export interface Props {
  title: string;
  description: string;
  publishDate: Date;
  category: string;
  tags: string[];
  slug: string;
  heroImage?: string;
  author: string;
  featured?: boolean;
  readingTime?: number;
}

const {
  title,
  description,
  publishDate,
  category,
  tags,
  slug,
  heroImage,
  author,
  featured = false,
  readingTime,
} = Astro.props;

// 格式化日期
const formattedDate = publishDate.toLocaleDateString('zh-CN', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<article class={`bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden ${featured ? 'ring-2 ring-primary/20' : ''}`}>
  <!-- 特色标记 -->
  {featured && (
    <div class="bg-primary text-white text-xs font-semibold px-3 py-1 absolute top-4 left-4 rounded-full z-10">
      精选
    </div>
  )}
  
  <!-- 主图 -->
  {heroImage && (
    <div class="aspect-video overflow-hidden">
      <img
        src={heroImage}
        alt={title}
        class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
      />
    </div>
  )}
  
  <!-- 内容 -->
  <div class="p-6">
    <!-- 分类和标签 -->
    <div class="flex items-center justify-between mb-3">
      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary">
        {category}
      </span>
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-1">
          {tags.slice(0, 2).map(tag => (
            <span class="text-xs text-gray-500">#{tag}</span>
          ))}
          {tags.length > 2 && (
            <span class="text-xs text-gray-400">+{tags.length - 2}</span>
          )}
        </div>
      )}
    </div>
    
    <!-- 标题 -->
    <h3 class="text-xl font-bold text-gray-900 mb-2 line-clamp-2">
      <a href={`/blog/${slug}`} class="hover:text-primary transition-colors duration-200">
        {title}
      </a>
    </h3>
    
    <!-- 描述 -->
    <p class="text-gray-600 mb-4 line-clamp-3">
      {description}
    </p>
    
    <!-- 元信息 -->
    <div class="flex items-center justify-between text-sm text-gray-500">
      <div class="flex items-center space-x-4">
        <div class="flex items-center">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
          </svg>
          <time datetime={publishDate.toISOString()}>
            {formattedDate}
          </time>
        </div>
        
        <div class="flex items-center">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
          </svg>
          <span>{author}</span>
        </div>
      </div>
      
      {readingTime && (
        <div class="flex items-center">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
          </svg>
          <span>{readingTime} 分钟</span>
        </div>
      )}
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 